@model homeopatija.Models.DrugView
@{
  ViewData["Title"] = Model.Drug.Title;
}

<div class="drug-card mb-3">
  <img width="200px" src="@Model.Drug.ImgUrl" alt="@Model.Drug.Title" class="product-image">
  <h2>@Model.Drug.Title</h2>
  <p class="product-price">$@Model.Drug.Price</p>
  <a href="/Product/Details/@Model.Drug.ID" class="product-details-link">Peržiūrėti</a>
</div>


<dialog id="report-comment-modal">
  <form action="/report/comment" method="post">
    <input type="hidden" id="comment-id-input" name="comment-id" value="">
    <div>Pranešti apie netinkamą komentarą</div>
    <button class="btn btn-outline-danger" id="cancel-report-btn">Atšaukti</button>
    <button class="btn btn-success" id="submit-report-btn">Pranešti</button>
  </form>
</dialog>

<dialog id="confirm-modal">
  <form action="/comment/delete" method="post">
    <input type="hidden" id="comment-id-input" name="comment-id" value="">
    <div id="confirmation-message">Ar tikrai?</div>
    <div class="d-flex justify-content-end">
      <button class="btn btn-outline-danger" id="cancel-btn">Atšaukti</button>
      <button class="btn btn-success" id="confirm-btn">Taip</button>
    </div>
  </form>
</dialog>

<dialog id="edit-comment-modal">
  <form action="/report/comment" method="post">
    <input type="hidden" id="comment-id-input" name="comment-id" value="">
    <div>Redaguoti komentarą</div>
    <textarea class="form-control rounded-0" id="update-comment-body-area" rows="3"></textarea>
    <button class="btn btn-outline-danger" id="cancel-edit-btn">Atšaukti</button>
    <button class="btn btn-success" id="submit-updated-comment-btn">Atnaujinti komentarą</button>
  </form>
</dialog>


<div id="comment-section">

  <form class="m-3" method="post" action="/report">
    <div class="form-group">
      <label class="h3" for="comment-body">Rašyti komentarą</label>
      <textarea class="form-control rounded-0" id="comment-body" rows="3"></textarea>
    </div>
    <button id="submit-comment" class="btn btn-primary float-right" type="submit">Komentuoti</button>
  </form>


  <h1>Komentarai</h1>
  @foreach (var item in Model.Comments)
  {
    Html.RenderPartial("_CommentPartial", item);
  }
</div>

<script>

  const notification = document.getElementById("notification")
  const reportModal = document.getElementById("report-comment-modal")
  const editCommentModal = document.getElementById("edit-comment-modal")

  function showNotification(message) {
    notification.style.display = "block";
    notification.querySelector("#notification-body").textContent = message

    setTimeout(() => {
      notification.style.display = "none"
    }, 3000)

  }

  //------comment submit ------------
  const commentButton = document.querySelector("#submit-comment")
  commentButton.addEventListener("click", (event) => {
    event.preventDefault()
    showNotification("Komentaras išsaugotas")

  })

  //------comment reporting ---------
  const commentSection = document.querySelector("#comment-section");
  const commentIdInput = document.getElementById("comment-id-input");

  //-------- comment editing -----------

  commentSection.addEventListener("click", (event) => {
    if (event.target && event.target.hasAttribute("data-comment-edit")) {
      const commentId = event.target.getAttribute("data-comment-id");
      commentIdInput.value = commentId

      const commentElement = event.target.closest('.comment');
      if (commentElement) {
        const commentBody = commentElement.querySelector('.comment-body');

        let updateCommentInput = document.getElementById("update-comment-body-area")
        if (commentBody) {
          updateCommentInput.value = commentBody.innerText
        }
        editCommentModal.showModal();
      }
    }

  });

  const cancelEditButton = document.getElementById("cancel-edit-btn")

  cancelEditButton.addEventListener("click", (event) => {
    event.preventDefault()
    editCommentModal.close()
  })


  const submitEditedCommentButton = document.getElementById("submit-updated-comment-btn")

  submitEditedCommentButton.addEventListener("click", (event) => {
    event.preventDefault()
    editCommentModal.close()

    showNotification("Komentaras nr. " + commentIdInput.value + " atnaujintas");

  })

  // -----------comment delete -----------------


  const confirmModal = document.getElementById("confirm-modal")
  confirm.showModal

  const cancelButton = document.getElementById("cancel-btn")
  const confirmButton = document.getElementById("confirm-btn")
  const confirmationMessage = document.getElementById("confirmation-message")

  commentSection.addEventListener("click", (event) => {

    if (!event.target) {
      return
    }

    const commentId = event.target.getAttribute("data-comment-id");
    commentIdInput.value = commentId


    if (event.target.hasAttribute("data-comment-delete")) {
      confirmationMessage.innerText = "Ar tikrai norite ištrinti komentarą?"
      confirmModal.showModal()
  @* let removedComment = document.querySelector("[comment-id]")
        commentSection.removeChild(removedComment) *@
    }

    if (event.target.hasAttribute("data-comment-report")) {
      confirmationMessage.innerText = "Ar tikrai manote, kad komentaras yra netinkamas?"
      confirmModal.showModal()
  @* let removedComment = document.querySelector("[comment-id]")
        commentSection.removeChild(removedComment) *@
    }



  });

  cancelButton.addEventListener("click", (event) => {
    event.preventDefault()
    confirmModal.close()
  })
  confirmButton.addEventListener("click", (event) => {
    event.preventDefault()

    confirmModal.close()
    showNotification("Pasirinkimas išsaugotas")
  })


</script>